package myLessons.philosopherTask;
//Трое безмолвных философов сидят вокруг круглого стола, перед каждым философом стоит тарелка спагетти.
//Вилки лежат на столе между каждой парой ближайших философов.
//Каждый философ может либо есть, либо размышлять. Приём пищи не ограничен количеством оставшихся спагетти — подразумевается бесконечный запас.
//Тем не менее философ может есть только тогда, когда держит две вилки — взятую справа и слева.
//Каждый философ может взять ближайшую вилку (если она доступна) или положить — если он уже держит её.
//Взятие каждой вилки и возвращение её на стол являются раздельными действиями, которые должны выполняться одно за другим.
//Вопрос задачи заключается в том, чтобы разработать модель поведения (параллельный алгоритм),
//при котором ни один из философов не будет голодать, то есть будет вечно чередовать приём пищи и размышления.

public class Demo {
    public static void main(String[] args) {

        Fork fork1 = new Fork();
        Fork fork2 = new Fork();
        Fork fork3 = new Fork();
        Fork fork4 = new Fork();
        Fork fork5 = new Fork();

        new Philosophers("Socrates", fork1, fork2);
        new Philosophers("Konfuci", fork2, fork3);
        new Philosophers("Laozi", fork3, fork1);
//        new Philosophers("Plato", fork4, fork5);
//        new Philosophers("Aristotle", fork5, fork1);


    }

}
